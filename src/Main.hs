{- |
Module      : Main
Description : Aplicação gráfica completa
Copyright   : Pedro Figueiredo Pereira <a104082@alunos.uminho.pt>
              Jorge Ubaldo Rodrigues Ferreira <a104096@alunos.uminho.pt>

Este módulo contem a resolução da Tarefa 6, a qual contém a aplicação gráfica completa. 

O grupo apresenta assim o trabalho concluído, com plena noção de falhas exporádicas em algumas features requeridas e outras não.

É de notar que o modo Carreira não cumpre, propositadamente, as regras presentes no guião.

O trabalho apresentava uma potencialidade de desenvolvimento e aperfeiçoamento enorme, no entanto, tal não foi possível devido aos prazos estabelecidos e a cumprir.

Bibliografia:
-- ** Guião Gloss feito pelo CeSIUM - https://www.youtube.com/watch?v=VDVGO3BTGYk&list=PLadvWyx_6w6XiJ95A4MqSfmIaRVbXWFGS
-- ** Documentação do Gloss - https://hackage.haskell.org/package/gloss
-- ** Fórum Stack Overflow
-- ** Material disponibilizado pelos docentes da UC
-}
module Main where

import LI12223
import Graphics.Gloss
-- import Graphics.Gloss.Interface.Pure.Game
import Graphics.Gloss.Interface.IO.Game

import System.Process
import System.Directory
import System.Exit (exitSuccess)
import System.Environment
import System.Random

import Data.List
import Data.Maybe

import ExtraDataConstructores
import Conversores
import Bot
import Niveis
import Audio
import Tarefa2_2022li1g010
import Tarefa4_2022li1g010
import Tarefa5_2022li1g010
import Personalizar_2022li1g010
import DeslizaJogoDefinido_2022li1g010
import Tarefa3_2022li1g010 (posJogador', animaJogo)


---------------------------------------------------------------------------------

-- | O estado do programa.

type EstadoGloss = (Menu, [Jogo], TexturasTerrenos, TexturasObstaculos, Extras, TexturasMenu, Int, ControladorBot, Modelopersonagem, ModeloMapa, Skins, [Roupas], TopScore, TempoDecorrido, ControladorSingle, ControladorMulti, [Score])

---------------------------------------------------------------------------------

-- | Distância entre duas pictures no mapa.
l :: Float
l = 50

-- | Altura do mapa.
altura :: Float
altura = 380

-- | Comprimento do mapa.
comprimento :: Float 
comprimento = (-300)

-- | Uma constante que define a taxa de atualização do programa - quantas vezes a função 'reageTempoGloss' é chamada por segundo.
frames :: Int
frames = 1 

-- | Define a dimensão da janela (neste caso FullScreen).
dimensions :: Display
dimensions = FullScreen

---------------------------------------------------------------------------------

-- | Função que desenha um terreno.
desenhaTerreno :: Float -> Float -> ModeloMapa -> StringTerreno -> TexturasTerrenos -> Picture
desenhaTerreno x y modeloMapa terreno texturasTerrenos = Translate realX realY textura
  where tupulo  = (fromJust . lookup (terreno ++ modeloMapa)) texturasTerrenos
        textura = fst tupulo
        realX   = ((+x) . fst . snd) tupulo
        realY   = ((+y) . snd . snd) tupulo

-- | Função que desenha uma linha de terrenos.
desenhaLinhaTerreno :: Float -> Float -> ModeloMapa -> [StringTerreno] -> TexturasTerrenos -> [Picture]
desenhaLinhaTerreno x y modeloMapa (h:t) texturasTerrenos = terreno : resto
  where terreno = desenhaTerreno x y modeloMapa h texturasTerrenos
        resto   = desenhaLinhaTerreno (x+l) y modeloMapa t texturasTerrenos
desenhaLinhaTerreno _ _ _ _ _ = []

-- | Função que desenha um mapa de terrenos.
desenhaMapaTerreno :: Float -> Float -> ModeloMapa -> [[StringTerreno]] -> TexturasTerrenos -> [Picture]
desenhaMapaTerreno x y modeloMapa (h:t) texturasTerrenos = linhaTerrenos ++ resto
  where linhaTerrenos = desenhaLinhaTerreno x y modeloMapa h texturasTerrenos
        resto = desenhaMapaTerreno x (y-l) modeloMapa t texturasTerrenos
desenhaMapaTerreno _ _ _ _ _ = []

-- | Função que desenha um obstaculo.
desenhaObstaculo :: Float -> Float -> ModeloMapa -> StringObstaculo -> TexturasObstaculos -> Float -> Picture
desenhaObstaculo x y modeloMapa obstaculo texturasObstaculos n = Translate (realX) (realY) textura
  where tupulo  = (fromJust . lookup (obstaculo ++ modeloMapa)) texturasObstaculos
        textura = fst tupulo
        realX   = ((+x) . fst . snd) tupulo
        realY   = ((+y) . snd . snd) tupulo

-- | Função que desenha uma linha de obstaculos.
desenhaLinhaObstaculo :: Float -> Float -> ModeloMapa -> [StringObstaculo] -> TexturasObstaculos -> Float -> [Picture]
desenhaLinhaObstaculo x y modeloMapa (h:t) texturasObstaculos n = obstaculo : resto
  where obstaculo = desenhaObstaculo x y modeloMapa h texturasObstaculos n
        resto     = desenhaLinhaObstaculo (x+(l)) y modeloMapa t texturasObstaculos n
desenhaLinhaObstaculo _ _ _ _ _ _ = []

-- | Função que desenha um mapa de obstaculos.
desenhaMapaObstaculo :: Float -> Float -> ModeloMapa -> [[StringObstaculo]] -> TexturasObstaculos -> Float -> [Picture]
desenhaMapaObstaculo x y modeloMapa (h:t) texturasObstaculos n = linhaObstaculos ++ resto
  where linhaObstaculos = desenhaLinhaObstaculo x y modeloMapa h texturasObstaculos n 
        resto = desenhaMapaObstaculo x (y-l) modeloMapa t texturasObstaculos n
desenhaMapaObstaculo _ _ _ _ _ _ = []

-- | Função que desenha um menu.
desenhaMenu :: StringMenu-> TexturasMenu -> Picture
desenhaMenu stringMenu texturasMenu = textura
  where tupulo  = (fromJust . lookup stringMenu) texturasMenu
        textura = fst tupulo
        realX   = ((+0) . fst . snd) tupulo
        realY   = ((+0) . snd . snd) tupulo

-- | Função que desenha uma topbar para o jogo.
desenhaTopBar :: Picture
desenhaTopBar = Translate (-326) (405) $ Color (cyan) $ Polygon [(0,0),(652,0),(652,30),(0,30)]

-- | Função que define a cor da moldura.
corMoldura = light $ light $ blue

-- | Função que desenha a moldura do jogo.
desenhaMoldura :: String -> [Picture]
desenhaMoldura titulo = [
                         (Translate (-336) (436) $ Color (corMoldura) $ Polygon [(0,0),(10,0),(10,-882),(0,-882)]), -- esquerda
                         (Translate (326) (436) $ Color (corMoldura) $ Polygon [(0,0),(10,0),(10,-882),(0,-882)]),  -- direita
                         (Translate (-336) (-455) $ Color (corMoldura) $ Polygon [(0,0),(672,0),(672,10),(0,10)]),  -- baixo
                         (Translate (-336) (432) $ Color (corMoldura) $ Polygon [(0,0),(672,0),(672,30),(0,30)]),  -- cima
                         (Translate (-50) (440) $ Color white $ scale 0.13 0.13 $ Text titulo)
                        ]

-- | Função que desenha a moldura na Loja.
desenhaMolduraLoja :: String -> [Picture]
desenhaMolduraLoja titulo = [
                             (Translate (-336-290) (436) $ Color (corMoldura) $ Polygon [(0,0),(10,0),(10,-882),(0,-882)]), -- esquerda
                             (Translate (326+250) (436) $ Color (corMoldura) $ Polygon [(0,0),(10,0),(10,-882),(0,-882)]),  -- direita
                             (Translate (-336-290) (-455) $ Color (corMoldura) $ Polygon [(0,0),(1212,0),(1212,10),(0,10)]),  -- baixo
                             (Translate (-336-290) (406) $ Color (corMoldura) $ Polygon [(0,0),(1212,0),(1212,30),(0,30)]),  -- cima
                             (Translate (-50) (415) $ Color white $ scale 0.13 0.13 $ Text titulo)
                            ]

-- | Função que desenha um valor de score.
desenhaScore :: StringExtras -> Extras -> Picture
desenhaScore stringExtras extras = (fromJust . lookup stringExtras) extras

-- | Função que desenha um jogador.
desenhaJogador :: ModeloMapa -> Jogador -> Roupas -> Skins -> Picture
desenhaJogador modeloMapa (Jogador (x,y)) roupas skins = (Translate (realPlayerX x) (realPlayerY y) image)
  where image = (fromJust . lookup ((conversorRoupasToString roupas) ++ modeloMapa)) skins

-- | Função auxiliar à __desenhaJogador__ para converter as coordenadas à escala do mapa.
realPlayerX :: Int -> Float
realPlayerX = (+ (comprimento-l))
              . (*l)
              . realToFrac
              . succ

-- | Função auxiliar à __desenhaJogador__ para converter as coordenadas à escala do mapa.
realPlayerY :: Int -> Float
realPlayerY = (+ altura)
              . (*(-l))
              . realToFrac 

-- | Função que desenha um jogador na Loja.
desenhaJogadorLoja :: ModeloMapa -> Jogador -> Roupas -> Skins -> Picture
desenhaJogadorLoja modeloMapa (Jogador (x,y)) roupas skins = (Translate (realPlayerXLoja x) (realPlayerYLoja y) image)
  where image = (fromJust . lookup ((conversorRoupasToString roupas) ++ modeloMapa)) skins

-- | Função auxiliar à __desenhaJogador__ para converter as coordenadas à escala do mapa.
realPlayerXLoja :: Int -> Float
realPlayerXLoja = (+ ((-600)-l))
              . (*l)
              . realToFrac
              . succ

-- | Função auxiliar à __desenhaJogador__ para converter as coordenadas à escala do mapa.
realPlayerYLoja :: Int -> Float
realPlayerYLoja = (+ altura)   
              . (*(-l))
              . realToFrac

---------------------------------------------------------------------------------

-- | Estado incial do programa.
estadoInicial = (jogo1:jogo2:lojaEx:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:nivel10:[])

-- | Função que define o estado inicial do programa.
estadoGlossInicial :: Int -> Extras -> [Roupas] -> TopScore -> TexturasTerrenos -> TexturasObstaculos -> TexturasMenu -> Skins -> EstadoGloss
estadoGlossInicial seed extras roupas topscore texturasTerrenos texturasObstaculos texturasMenu skins = (Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, False, "1", "1", skins, roupas, topscore, 0, False, True, (0:0:[]))

-- | Desenha o estado do programa, consoante algumas variáveis - transforma um estado numa 'Picture'.
desenhaEstadoGloss :: EstadoGloss -> IO Picture
-- Desenha Single
desenhaEstadoGloss (InicioSingle, (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do print $ map terrenoToString (agarraTerrenos estado)
                                                                                                                                                                                                                                                               return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [topBar] ++ [mostraTempo] ++ [mostraScore] ++ [mostraSkin] ++ [mostraMoldura] ++ [Translate 0 (150) $ scale 0.8 0.8 $ logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura modeloMapa (map obstaculoToString $ agarraObstaculos estado) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura modeloMapa (map terrenoToString (agarraTerrenos estado)) texturasTerrenos
         desenhoJogador            = desenhaJogador modelopersonagem jogador (head roupas) skins
         mostraTempo               = Translate (-300) 413 $ scale 0.15 0.15 $ Text ("Time: " ++ (show $ round n) ++ " | ")
         mostraScore               | (head score) < 10 = Translate (260) 350 $ scale 2 2 $ desenhaScore (show $ head score) extras
                                   | (head score) >= 10 && (head score) <= 99 = Pictures [Translate (250) 350 $ scale 2 2 $ desenhaScore [(head $ show $ head score)] extras, Translate (285) 350 $ scale 2 2 $ desenhaScore [(head $ tail $ show $ head score)] extras]
                                   | (head score) >= 100 && (head score) <= 999 = Pictures [Translate (250) 350 $ scale 2 2 $ desenhaScore [(head $ show $ head score)] extras, Translate (285) 350 $ scale 2 2 $ desenhaScore [(head $ tail $ show $ head score)] extras, Translate (320) 350 $ scale 2 2 $ desenhaScore [(head $ tail $ tail $ show $ head score)] extras]
                                   | otherwise = Rotate 90 $ Translate (260) 350 $ scale 2 2 $ desenhaScore "8" extras
         mostraSkin                = Translate (-77) 413 $ scale 0.15 0.15 $ Text ("Skin: " ++ conversorModelopersonagemToNome modelopersonagem)
         mostraMoldura             = Pictures (desenhaMoldura "Classico")
         topBar                    = desenhaTopBar
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank

-- Desenha Multi
desenhaEstadoGloss (InicioMulti, (estado1@(Jogo jogador1 mapa1):estado2@(Jogo jogador2 mapa2):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures ([Translate (-15) 0 background] ++ [(Translate (-300) 0 desenhoJogoInteiro)] ++ [(Translate (300) 0 desenhoJogoInteiro')])
   where desenhoJogoInteiro         = Pictures (desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [topBar] ++ [mostraTempo] ++ [mostraScore] ++ [mostraSkin] ++ [mostraMoldura] ++ [mostraPrepara] ++ [Translate 0 (150) $ scale 0.8 0.8 $ logotipo])

         desenhoDoMapaDeObstaculos  = desenhaMapaObstaculo comprimento altura modeloMapa (map obstaculoToString $ agarraObstaculos estado1) texturasObstaculos n
         desenhoDoMapaDeTerrenos    = desenhaMapaTerreno comprimento altura modeloMapa (map terrenoToString (agarraTerrenos estado1)) texturasTerrenos
         desenhoJogador             = desenhaJogador modelopersonagem jogador1 (head roupas) skins
         mostraTempo                = Translate (-300) 413 $ scale 0.15 0.15 $ Text ("Time: " ++ (show $ round n) ++ " | ")
         mostraScore                = Translate (-190) 413 $ scale 0.15 0.15 $ Text ("Score: " ++ (show $ head score) ++ " | ")
         mostraSkin                 = Translate (-77) 413 $ scale 0.15 0.15 $ Text ("Skin: " ++ (show $ fst $ head skins))
         mostraMoldura              = Pictures (desenhaMoldura "Multijogador")
         topBar                     = desenhaTopBar
         mostraPrepara              | n <= 3 = Pictures [Translate (-170) 0 $ Scale (0.3) (0.3) $ Color white $ Text $ "Inicio em " ++ (show $ round n)]
                                    | otherwise = Blank
         logotipo                   | n <= 3 = (desenhaMenu "logoEx" texturasMenu)
                                    | otherwise = Blank
         desenhoJogoInteiro'        = Pictures (desenhoDoMapaDeTerrenos' ++ desenhoDoMapaDeObstaculos' ++ [desenhoJogador'] ++ [topBar'] ++ [mostraTempo'] ++ [mostraScore'] ++ [mostraSkin'] ++ [mostraMoldura'] ++ [mostraPrepara'] ++ [Translate 0 (150) $ scale 0.8 0.8 $ logotipo])
         desenhoDoMapaDeObstaculos' = desenhaMapaObstaculo comprimento altura modeloMapa (map obstaculoToString $ agarraObstaculos estado2) texturasObstaculos n
         desenhoDoMapaDeTerrenos'   = desenhaMapaTerreno comprimento altura modeloMapa (map terrenoToString (agarraTerrenos estado2)) texturasTerrenos
         desenhoJogador'            = desenhaJogador modelopersonagem jogador2 (head roupas) skins
         mostraTempo'               = Translate (-300) 413 $ scale 0.15 0.15 $ Text ("Time: " ++ (show $ round n) ++ " | ")
         mostraScore'               = Translate (-190) 413 $ scale 0.15 0.15 $ Text ("Score: " ++ (show $ head $ tail score) ++ " | ")
         mostraSkin'                = Translate (-77) 413 $ scale 0.15 0.15 $ Text ("Skin: " ++ (show $ fst $ head skins))
         mostraMoldura'             = Pictures (desenhaMoldura "Multijogador")
         topBar'                    = desenhaTopBar
         mostraPrepara'             | n <= 3 = Pictures [Translate (-100) 0 $ Scale (0.3) (0.3) $ Color white $ Text $ "Inicio em " ++ (show $ round n)]
                                    | otherwise = Blank
         background                = (desenhaMenu "background" texturasMenu)

-- Desenha Menu Principal
desenhaEstadoGloss (Opcoes (Jogar Nada)  , (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, premido_jogar, Translate 0 (-100) $ personalizar, Translate 0 (-200) $ normal_sair, Translate 0 (-300) $ normal_ajuda, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where premido_jogar = (desenhaMenu "btn_pressed_jogar" texturasMenu)
                                                                                                                                                                                                    personalizar = (desenhaMenu "btn_normal_personalizar" texturasMenu)
                                                                                                                                                                                                    normal_sair = (desenhaMenu "btn_normal_sair" texturasMenu)
                                                                                                                                                                                                    normal_ajuda = (desenhaMenu "btn_normal_ajuda" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)

desenhaEstadoGloss (Opcoes Personalizar   , (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, normal_jogar, Translate 0 (-100) $ personalizar, Translate 0 (-200) $ premido_sair, Translate 0 (-300) $ normal_ajuda, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where normal_jogar = (desenhaMenu "btn_normal_jogar" texturasMenu)
                                                                                                                                                                                                    personalizar = (desenhaMenu "btn_pressed_personalizar" texturasMenu)
                                                                                                                                                                                                    premido_sair = (desenhaMenu "btn_normal_sair" texturasMenu)
                                                                                                                                                                                                    normal_ajuda = (desenhaMenu "btn_normal_ajuda" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)

desenhaEstadoGloss (Opcoes Sair          , (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, normal_jogar, Translate 0 (-100) $ personalizar, Translate 0 (-200) $ premido_sair, Translate 0 (-300) $ normal_ajuda, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where normal_jogar = (desenhaMenu "btn_normal_jogar" texturasMenu)
                                                                                                                                                                                                    personalizar = (desenhaMenu "btn_normal_personalizar" texturasMenu)
                                                                                                                                                                                                    premido_sair = (desenhaMenu "btn_pressed_sair" texturasMenu)
                                                                                                                                                                                                    normal_ajuda = (desenhaMenu "btn_normal_ajuda" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)

desenhaEstadoGloss (Opcoes (Instrucoes SemAcao)    , (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, normal_jogar, Translate 0 (-100) $ personalizar, Translate 0 (-200) $ normal_sair, Translate 0 (-300) $ premido_ajuda, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where normal_jogar = (desenhaMenu "btn_normal_jogar" texturasMenu)
                                                                                                                                                                                                    personalizar = (desenhaMenu "btn_normal_personalizar" texturasMenu)
                                                                                                                                                                                                    normal_sair = (desenhaMenu "btn_normal_sair" texturasMenu)
                                                                                                                                                                                                    premido_ajuda = (desenhaMenu "btn_pressed_ajuda" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)

desenhaEstadoGloss (PerdeuSingle         , (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 (desenhaMenu "background" texturasMenu), Translate (0) (200) $ (fromJust . lookup "gameover") extras, Translate (-150) (-50) $ (fromJust . lookup "scoreT") extras, Translate (15) (-45) $ scale 1.4 1.4 mostrascore, Translate (-150) (-150) $ (fromJust . lookup "timeT") extras, Translate (15) (-155) $ scale 1.4 1.4 mostratime]
                                                                                                                                                                                                                                                                                                                                                            where mostrascore | (head score) < 10 = scale 1.6 1.6 $ desenhaScore (show (head score)) extras
                                                                                                                                                                                                                                                                                                                                                                              | (head score) >= 10 && (head score) <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ (head score))] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show (head score))] extras]
                                                                                                                                                                                                                                                                                                                                                                              | (head score) >= 100 && (head score) <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ (head score))] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show (head score))] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show (head score))] extras]
                                                                                                                                                                                                                                                                                                                                                                              | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                                                                                                                                                                                  mostratime  | (round n) < 10 = scale 1.6 1.6 $ desenhaScore (show (round n)) extras
                                                                                                                                                                                                                                                                                                                                                                              | (round n) >= 10 && (round n) <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ (round n))] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show (round n))] extras]
                                                                                                                                                                                                                                                                                                                                                                              | (round n) >= 100 && (round n) <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ (round n))] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show (round n))] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show (round n))] extras]
                                                                                                                                                                                                                                                                                                                                                                              | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
-- Desenhar SubMenu
desenhaEstadoGloss (Opcoes (Jogar Single), (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, single, Translate 0 (-100) $ multijogador, Translate 0 (-200) $ carreira, Translate 0 (-300) voltar, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where single = (desenhaMenu "btn_pressed_classico" texturasMenu)
                                                                                                                                                                                                    multijogador = (desenhaMenu "btn_normal_multijogador" texturasMenu)
                                                                                                                                                                                                    carreira = (desenhaMenu "btn_normal_carreira" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)

desenhaEstadoGloss (Opcoes (Jogar Multi) , (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, single, Translate 0 (-100) $ multijogador, Translate 0 (-200) $ carreira, Translate 0 (-300) voltar, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where single = (desenhaMenu "btn_normal_classico" texturasMenu)
                                                                                                                                                                                                    multijogador = (desenhaMenu "btn_pressed_multijogador" texturasMenu)
                                                                                                                                                                                                    carreira = (desenhaMenu "btn_normal_carreira" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)

desenhaEstadoGloss (Opcoes (Jogar Voltar), (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, single, Translate 0 (-100) $ multijogador, Translate 0 (-200) $ carreira, Translate 0 (-300) voltar, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where single = (desenhaMenu "btn_normal_classico" texturasMenu)
                                                                                                                                                                                                    multijogador = (desenhaMenu "btn_normal_multijogador" texturasMenu)
                                                                                                                                                                                                    carreira = (desenhaMenu "btn_normal_carreira" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_pressed_voltar" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)

desenhaEstadoGloss (Opcoes (Jogar (Carreira NadaNiveis)), (estado@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, single, Translate 0 (-100) $ multijogador, Translate 0 (-200) $ carreira, Translate 0 (-300) voltar, Translate 0 (230) logotipo, Translate (-800) (500) $ topscoreDesenho, Translate (-630) (495) $ topscoreValor, Translate (850) (500) $ somDesenho, Translate (-800) (-100) $ personagem, Translate (-800) (0) $ titulo_personagem, Translate (-800) (-350) $ mapax, Translate (-800) (-250) $ titulo_mapax]
                                                                                                                                                                                              where single = (desenhaMenu "btn_normal_classico" texturasMenu)
                                                                                                                                                                                                    multijogador = (desenhaMenu "btn_normal_multijogador" texturasMenu)
                                                                                                                                                                                                    carreira = (desenhaMenu "btn_pressed_carreira" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    somDesenho = (fromJust . lookup "som2") extras
                                                                                                                                                                                                    topscoreValor | topscore < 10 = scale 1.6 1.6 $ desenhaScore (show topscore) extras
                                                                                                                                                                                                                  | topscore >= 10 && topscore <= 99 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | topscore >= 100 && topscore <= 999 = Pictures [scale 1.6 1.6 $ desenhaScore [(head $ show $ topscore)] extras, Translate (30) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ show topscore)] extras, Translate (60) 0 $ scale 1.6 1.6 $ desenhaScore [(head $ tail $ tail $ show topscore)] extras]
                                                                                                                                                                                                                  | otherwise = Rotate 90 $ scale 2 2 $ desenhaScore "8" extras
                                                                                                                                                                                                    topscoreDesenho = (fromJust . lookup "topscore") extras
                                                                                                                                                                                                    background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    titulo_personagem = (fromJust . lookup "skin_atual") extras
                                                                                                                                                                                                    personagem = scale 3 3 $ Pictures [moldura, ((fromJust . lookup ("Personagem" ++ modelopersonagem)) skins)]
                                                                                                                                                                                                    titulo_mapax = (fromJust . lookup "mapa_atual") extras
                                                                                                                                                                                                    mapax = scale 3 3 $ Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup ("Mapas" ++ modeloMapa)) skins)]
                                                                                                                                                                                                    moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
-- Desenhar PrepararMulti
desenhaEstadoGloss (PrepararMulti, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-100) 0 $ Scale (0.5) (0.5) $ Text $ "Começar em " ++ (show $ round n)]
-- Desenhar Carreira SubMenu
desenhaEstadoGloss (InicioCarreira VoltarNiveis SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate 200 0 imagem_nivel1]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_pressed_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel1 = (desenhaMenu "nivel1front" texturasMenu)

desenhaEstadoGloss (InicioCarreira (Nivel1 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_pressed_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel1front" texturasMenu)

desenhaEstadoGloss (InicioCarreira (Nivel2 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_pressed_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel2front" texturasMenu)


desenhaEstadoGloss (InicioCarreira (Nivel3 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_pressed_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel3front" texturasMenu)

                                                                                                                                                                                                    
desenhaEstadoGloss (InicioCarreira (Nivel4 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_pressed_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel4front" texturasMenu)


desenhaEstadoGloss (InicioCarreira (Nivel5 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_pressed_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel5front" texturasMenu)


desenhaEstadoGloss (InicioCarreira (Nivel6 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_pressed_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel6front" texturasMenu)


desenhaEstadoGloss (InicioCarreira (Nivel7 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_pressed_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel7front" texturasMenu)


desenhaEstadoGloss (InicioCarreira (Nivel8 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_pressed_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel8front" texturasMenu)


desenhaEstadoGloss (InicioCarreira (Nivel9 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_pressed_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_normal_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel9front" texturasMenu)


desenhaEstadoGloss (InicioCarreira (Nivel10 1) SemAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (-700) (400) nivel1, Translate (-700) (310) nivel2, Translate (-700) (220) nivel3, Translate (-700) (130) nivel4, Translate (-700) (40) nivel5, Translate (-700) (-50) nivel6, Translate (-700) (-140) nivel7, Translate (-700) (-230) nivel8, Translate (-700) (-320) nivel9, Translate (-700) (-410) nivel10, Translate (-880) (510) $ scale 0.5 0.5 voltar, Translate (800) (450) $ scale 0.4 0.4 logotipo, Translate 200 0 imagem_nivel]
                                                                                                                                                                                              where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                    logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                    nivel1 = (desenhaMenu "btn_normal_nivel1" texturasMenu)
                                                                                                                                                                                                    nivel2 = (desenhaMenu "btn_normal_nivel2" texturasMenu)
                                                                                                                                                                                                    nivel3 = (desenhaMenu "btn_normal_nivel3" texturasMenu)
                                                                                                                                                                                                    nivel4 = (desenhaMenu "btn_normal_nivel4" texturasMenu)
                                                                                                                                                                                                    nivel5 = (desenhaMenu "btn_normal_nivel5" texturasMenu)
                                                                                                                                                                                                    nivel6 = (desenhaMenu "btn_normal_nivel6" texturasMenu)
                                                                                                                                                                                                    nivel7 = (desenhaMenu "btn_normal_nivel7" texturasMenu)
                                                                                                                                                                                                    nivel8 = (desenhaMenu "btn_normal_nivel8" texturasMenu)
                                                                                                                                                                                                    nivel9 = (desenhaMenu "btn_normal_nivel9" texturasMenu)
                                                                                                                                                                                                    nivel10 = (desenhaMenu "btn_pressed_nivel10" texturasMenu)
                                                                                                                                                                                                    voltar = (desenhaMenu "btn_normal_voltar" texturasMenu)
                                                                                                                                                                                                    imagem_nivel = (desenhaMenu "nivel10front" texturasMenu)


-- Desenhar Loja
desenhaEstadoGloss (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo jogador mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo (-600) altura modeloMapa (map obstaculoToString $ agarraObstaculos loja) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno (-600) altura modeloMapa (map terrenoToString (agarraTerrenos loja)) texturasTerrenos
         desenhoJogador            = desenhaJogadorLoja modelopersonagem jogador (head roupas) skins
         mostraMoldura             = Pictures (desenhaMolduraLoja "Personalizar")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel1
desenhaEstadoGloss (InicioCarreira (Nivel1 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "1" (map obstaculoToString $ agarraObstaculos (listaJogos !! 3)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "1" (map terrenoToString (agarraTerrenos (listaJogos !! 3))) texturasTerrenos
         desenhoJogador            = desenhaJogador "1" (agarraJogador (listaJogos !! 3)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 1")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel2
desenhaEstadoGloss (InicioCarreira (Nivel2 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "2" (map obstaculoToString $ agarraObstaculos (listaJogos !! 4)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "2" (map terrenoToString (agarraTerrenos (listaJogos !! 4))) texturasTerrenos
         desenhoJogador            = desenhaJogador "2" (agarraJogador (listaJogos !! 4)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 2")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel3
desenhaEstadoGloss (InicioCarreira (Nivel3 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "3" (map obstaculoToString $ agarraObstaculos (listaJogos !! 5)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "3" (map terrenoToString (agarraTerrenos (listaJogos !! 5))) texturasTerrenos
         desenhoJogador            = desenhaJogador "3" (agarraJogador (listaJogos !! 5)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 3")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel4
desenhaEstadoGloss (InicioCarreira (Nivel4 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "4" (map obstaculoToString $ agarraObstaculos (listaJogos !! 6)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "4" (map terrenoToString (agarraTerrenos (listaJogos !! 6))) texturasTerrenos
         desenhoJogador            = desenhaJogador "4" (agarraJogador (listaJogos !! 6)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 4")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel5
desenhaEstadoGloss (InicioCarreira (Nivel5 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "5" (map obstaculoToString $ agarraObstaculos (listaJogos !! 7)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "5" (map terrenoToString (agarraTerrenos (listaJogos !! 7))) texturasTerrenos
         desenhoJogador            = desenhaJogador "5" (agarraJogador (listaJogos !! 7)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 5")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel6
desenhaEstadoGloss (InicioCarreira (Nivel6 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "6" (map obstaculoToString $ agarraObstaculos (listaJogos !! 8)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "6" (map terrenoToString (agarraTerrenos (listaJogos !! 8))) texturasTerrenos
         desenhoJogador            = desenhaJogador "6" (agarraJogador (listaJogos !! 8)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 6")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel7
desenhaEstadoGloss (InicioCarreira (Nivel7 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "7" (map obstaculoToString $ agarraObstaculos (listaJogos !! 9)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "7" (map terrenoToString (agarraTerrenos (listaJogos !! 9))) texturasTerrenos
         desenhoJogador            = desenhaJogador "7" (agarraJogador (listaJogos !! 9)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 7")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel8
desenhaEstadoGloss (InicioCarreira (Nivel8 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "8" (map obstaculoToString $ agarraObstaculos (listaJogos !! 10)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "8" (map terrenoToString (agarraTerrenos (listaJogos !! 10))) texturasTerrenos
         desenhoJogador            = desenhaJogador "8" (agarraJogador (listaJogos !! 10)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 8")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel9
desenhaEstadoGloss (InicioCarreira (Nivel9 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "9" (map obstaculoToString $ agarraObstaculos (listaJogos !! 11)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "9" (map terrenoToString (agarraTerrenos (listaJogos !! 11))) texturasTerrenos
         desenhoJogador            = desenhaJogador "9" (agarraJogador (listaJogos !! 11)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 9")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank
-- Desenhar Nivel10
desenhaEstadoGloss (InicioCarreira (Nivel10 1) ComAcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures desenhoJogoInteiro
   where desenhoJogoInteiro        = ([Translate (-15) 0 background] ++ desenhoDoMapaDeTerrenos ++ desenhoDoMapaDeObstaculos ++ [desenhoJogador] ++ [mostraMoldura] ++ [Translate (800) (450) $ scale 0.4 0.4 logotipo])
         desenhoDoMapaDeObstaculos = desenhaMapaObstaculo comprimento altura "10" (map obstaculoToString $ agarraObstaculos (listaJogos !! 12)) texturasObstaculos n
         desenhoDoMapaDeTerrenos   = desenhaMapaTerreno comprimento altura "10" (map terrenoToString (agarraTerrenos (listaJogos !! 12))) texturasTerrenos
         desenhoJogador            = desenhaJogador "10" (agarraJogador (listaJogos !! 12)) (head roupas) skins
         mostraMoldura             = Pictures (desenhaMoldura "Nivel 10")
         background                = (desenhaMenu "background" texturasMenu)
         logotipo                  | not controladorSingle = (desenhaMenu "logoEx" texturasMenu)
                                   | otherwise = Blank

desenhaEstadoGloss (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 (desenhaMenu "background" texturasMenu), fim]
                                                                                                                                                                                                                                   where fim | head score >= 2 = Translate (0) (200) $ (fromJust . lookup "nivel_concluido") extras
                                                                                                                                                                                                                                             | otherwise = Translate (0) (200) $ (fromJust . lookup "gameover") extras
desenhaEstadoGloss (PerdeuMulti 1, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 (desenhaMenu "background" texturasMenu), Translate (0) (200) $ (fromJust . lookup "p1wins") extras]
desenhaEstadoGloss (PerdeuMulti 2, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 (desenhaMenu "background" texturasMenu), Translate (0) (200) $ (fromJust . lookup "p2wins") extras]

-- Desenhar Loja 

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-700) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras
                                                                                                                                                                                                                                                   
desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel2 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-400) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel3 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-100) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel4 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (200) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel5 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (500) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel6 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-700) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel7 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-400) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel8 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-100) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel9 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (200) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

desenhaEstadoGloss (InicioPersonalizar (NasRoupas (Nivel10 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (500) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, ((fromJust . lookup "Personagem1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, ((fromJust . lookup "Personagem2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, ((fromJust . lookup "Personagem3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, ((fromJust . lookup "Personagem4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, ((fromJust . lookup "Personagem5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, ((fromJust . lookup "Personagem6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, ((fromJust . lookup "Personagem7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, ((fromJust . lookup "Personagem8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, ((fromJust . lookup "Personagem9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, ((fromJust . lookup "Personagem10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "skinsT") extras

-- Desenhar Loja 

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel1 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-700) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras
                                                                                                                                                                                                                                                   
desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel2 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-400) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel3 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-100) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel4 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (200) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel5 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (500) (400) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel6 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-700) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel7 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-400) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)]
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel8 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (-100) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)]
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel9 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (200) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

desenhaEstadoGloss (InicioPersonalizar (NosMapas (Nivel10 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 background, Translate (100) (-300) $ Pictures [Translate (-700) (400) $ scale 4 4 personagem1, Translate (-400) (400) $ scale 4 4 personagem2, Translate (-100) (400) $ scale 4 4 personagem3, Translate (200) (400) $ scale 4 4 personagem4, Translate (500) (400) $ scale 4 4 personagem5, Translate (-700) (100) $ scale 4 4 personagem6, Translate (-400) (100) $ scale 4 4 personagem7, Translate (-100) (100) $ scale 4 4 personagem8, Translate (200) (100) $ scale 4 4 personagem9, Translate (500) (100) $ scale 4 4 personagem10], Translate (92.9) (-303.8) $ Translate (500) (100) $ molduraselect, Translate 0 400 $ tituloS,Translate (800) (450) $ scale 0.4 0.4 logotipo]
                                                                                                                                                                                                                                             where background = (desenhaMenu "background" texturasMenu)
                                                                                                                                                                                                                                                   logotipo = (desenhaMenu "logoEx" texturasMenu)
                                                                                                                                                                                                                                                   personagem1  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas1" ) skins)] 
                                                                                                                                                                                                                                                   personagem2  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas2" ) skins)]
                                                                                                                                                                                                                                                   personagem3  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas3" ) skins)]
                                                                                                                                                                                                                                                   personagem4  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas4" ) skins)]
                                                                                                                                                                                                                                                   personagem5  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas5" ) skins)]
                                                                                                                                                                                                                                                   personagem6  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas6" ) skins)]
                                                                                                                                                                                                                                                   personagem7  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas7" ) skins)]
                                                                                                                                                                                                                                                   personagem8  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas8" ) skins)]
                                                                                                                                                                                                                                                   personagem9  = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas9" ) skins)]
                                                                                                                                                                                                                                                   personagem10 = Pictures [moldura, Translate (-2) (-1) ((fromJust . lookup "Mapas10") skins)]
                                                                                                                                                                                                                                                   molduraselect = scale 0.58 0.58 ((fromJust . lookup "moldura") skins)
                                                                                                                                                                                                                                                   moldura = scale 1.5 1.5 ((fromJust . lookup "moldurabase") skins)
                                                                                                                                                                                                                                                   tituloS = (fromJust . lookup "mapasT") extras

-- Desenhar Ajuda

desenhaEstadoGloss (Opcoes (Instrucoes ComAcao)    , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ Pictures [Translate (-15) 0 (desenhaMenu "background" texturasMenu), (fromJust . lookup "ajuda") extras]

-- Outros casos
desenhaEstadoGloss _ = return $ Blank

-- | Função que define padrão de escrita para a topbar.
drawOption option = Translate (-50) 0 $ Scale (0.5) (0.5) $ Text option

-- | Função que reage a um evento, por parte do utilizador, através do teclado ou do rato.
-- Reagir Menu
reageEventoGloss :: Event -> EstadoGloss -> IO EstadoGloss
-- Reagir Trocas NasRoupas
-- Imagem1
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel2 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel5 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem2
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel3 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel1 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem3
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel4 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel2 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem4
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel5 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel3 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem5
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel1 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel4 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem6
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel7 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel10 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem7
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel8 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel6 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem8
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel9 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel7 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem9
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel10 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NasRoupas (Nivel8 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem10
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                     return $ (InicioPersonalizar (NasRoupas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                     return $ (InicioPersonalizar (NasRoupas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NasRoupas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                     return $ (InicioPersonalizar (NasRoupas (Nivel6 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NasRoupas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                     return $ (InicioPersonalizar (NasRoupas (Nivel9 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Enters 
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "1", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "2", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "3", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "4", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "5", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "6", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "7", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "8", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "9", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NasRoupas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                     return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, "10", modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

-- Reagir Trocas NosMapas
-- Imagem1
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel2 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel5 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem2
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel3 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel1 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem3
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel4 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel2 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem4
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel5 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel3 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem5
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel1 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel4 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem6
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel7 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel10 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem7
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel8 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel6 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem8
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel9 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel7 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem9
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel10 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                   return $ (InicioPersonalizar (NosMapas (Nivel8 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Imagem10
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar (NosMapas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NosMapas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar (NosMapas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NosMapas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar (NosMapas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NosMapas (Nivel6 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar (NosMapas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                                    return $ (InicioPersonalizar (NosMapas (Nivel9 1))    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Enters 
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel1 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "1", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel2 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "2", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel3 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "3", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel4 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "4", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel5 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "5", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel6 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "6", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel7 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "7", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel8 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "8", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel9 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                   return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "9", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioPersonalizar (NosMapas (Nivel10 1))      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playSelecionar
                                                                                                                                                                                                                                                                                                                    return $ (Opcoes (Jogar Nada)      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, "10", skins, roupas, topscore, n, controladorSingle, controladorMulti, score)


-- Reagir Menu Principal
-- Enters
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes (Jogar Nada), (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuEntry
                                                                                                                                                                                                                                                                                        return $ (Opcoes (Jogar Single), (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes Personalizar, (jogo1:jogo2:(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuEntry
                                                                                                                                                                                                                                                                                                                           return $ (InicioPersonalizar Quieto   , (jogo1:jogo2:(Jogo (Jogador (11,8)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes Sair        , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do killProcess 
                                                                                                                                                                                                                                                                                        exitSuccess -- return $ (Opcoes Sair          , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes (Instrucoes SemAcao)  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuEntry
                                                                                                                                                                                                                                                                                                  return $ (Opcoes (Instrucoes ComAcao)    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'q'           ) Down _ _) (Opcoes (Instrucoes ComAcao)  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do return $ (Opcoes (Instrucoes SemAcao) , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'Q'           ) Down _ _) (Opcoes (Instrucoes ComAcao)  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do return $ (Opcoes (Instrucoes SemAcao) , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Trocas
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes (Jogar Nada), (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                        return $ (Opcoes (Instrucoes SemAcao)    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes (Jogar Nada), (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                        return $ (Opcoes Personalizar  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes Personalizar, (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                        return $ (Opcoes (Jogar Nada)  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes Personalizar, (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                        return $ (Opcoes Sair          , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes Sair        , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                        return $ (Opcoes Personalizar  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes Sair        , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                        return $ (Opcoes (Instrucoes SemAcao)    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes (Instrucoes SemAcao)  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                  return $ (Opcoes Sair          , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes (Instrucoes SemAcao)  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                  return $ (Opcoes (Jogar Nada)  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Reagir ao SubMenu 
-- Enters
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes (Jogar Single)               , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:ts)       ) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                                      playMenuEntry
                                                                                                                                                                                                                                                                                                                      playGame
                                                                                                                                                                                                                                                                                                                      return $ (InicioSingle                 , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, False, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False, controladorMulti, (0:ts)  )
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes (Jogar Multi)                , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts)) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                                      playMenuEntry
                                                                                                                                                                                                                                                                                                                      playGame
                                                                                                                                                                                                                                                                                                                      return $ (InicioMulti                  , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False, False, (0:0:ts))
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes (Jogar (Carreira NadaNiveis)), (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts)) = do playMenuEntry
                                                                                                                                                                                                                                                                                                                      return $ (InicioCarreira (Nivel1 1) SemAcao, (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True, False, (0:0:ts))
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (Opcoes (Jogar Voltar)               , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score             ) = do playMenuEntry
                                                                                                                                                                                                                                                                                                                      return $ (Opcoes (Jogar Nada)          , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score   )
-- Trocas
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes (Jogar Single)                , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar Voltar)               , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes (Jogar Single)                , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar Multi)                , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes (Jogar Multi)                 , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar Single)               , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes (Jogar Multi)                 , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar (Carreira NadaNiveis)), (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes (Jogar (Carreira NadaNiveis)) , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar Multi)                , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes (Jogar (Carreira NadaNiveis)) , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar Voltar)               , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (Opcoes (Jogar Voltar)                , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar (Carreira NadaNiveis)), (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (Opcoes (Jogar Voltar)                , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                          return $ (Opcoes (Jogar Single)               , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Reagir ao SubMenu Carreira
--Enters 
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira VoltarNiveis SemAcao    , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipal
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              return $ (Opcoes (Jogar (Carreira NadaNiveis))        , listaJogos   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel1 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel1
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel1 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel2 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel2
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel2 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel3 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel3
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel3 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel4 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel4
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel4 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel5 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel4
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel5 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel6 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel6
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel6 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel7 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel7
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel7 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel8 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel8
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel8 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel9 1) SemAcao      , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel9
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel9 1) ComAcao       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (InicioCarreira (Nivel10 1) SemAcao     , listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuPrincipalPause
                                                                                                                                                                                                                                                                                                              playMenuEntry
                                                                                                                                                                                                                                                                                                              playNivel10
                                                                                                                                                                                                                                                                                                              return $ (InicioCarreira (Nivel10 1) ComAcao      , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score)
-- Trocas
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira VoltarNiveis SemAcao    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel1 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira VoltarNiveis SemAcao    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel1 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel1 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira VoltarNiveis SemAcao    , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel1 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel2 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel2 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel1 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel2 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel3 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel3 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel2 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel3 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel4 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel4 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel3 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel4 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel5 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel5 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel4 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel5 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel6 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel6 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel5 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel6 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel7 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel7 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel6 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel7 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel8 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel8 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel7 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel8 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel9 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel9 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel8 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel9 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel10 1) SemAcao     , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel10 1) SemAcao     , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel9 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel10 1) SemAcao     , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do playMenuChange
                                                                                                                                                                                                                                                                                                            return $ (InicioCarreira (Nivel1 1) SemAcao      , (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

-- Single:
-- Reage Single
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Cima    )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Baixo   )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Esquerda)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Direita )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Cima    )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Baixo   )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Esquerda)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Direita )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Cima    )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Baixo   )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Esquerda)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)              | not(jogoTerminou jogo) = do return $ (InicioSingle, ((Jogo (posJogador' jogo (Move Direita )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score            )
                                                                                                                                                                                                                                                                                                                     | otherwise              = do writeFile "save.txt" (show (roupas,(max topscore (head score))))
                                                                                                                                                                                                                                                                                                                                                   return $ (PerdeuSingle, (jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, (max topscore (head score)), n, controladorSingle, controladorMulti, score            )
--             Perde Single
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (PerdeuSingle, (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:ts)) = do killProcess
                                                                                                                                                                                                                                                                                       return $ (Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, False, controladorMulti, (0:ts))
-- Multi:
-- Reage Multi
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioMulti , (h:jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(hs:score1:ts)) | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , (h:(Jogo (posJogador' jogo (Move Cima    )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (hs:(score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 2, (h:jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioMulti , (h:jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , (h:(Jogo (posJogador' jogo (Move Baixo   )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 2, (h:jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioMulti , (h:jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , (h:(Jogo (posJogador' jogo (Move Esquerda)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 2, (h:jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioMulti , (h:jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , (h:(Jogo (posJogador' jogo (Move Direita )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 2, (h:jogo:t)                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))    | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Cima    )) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, ((score1 + 1):ts)   )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Baixo   )) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Esquerda)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Direita )) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))    | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Cima    )) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, ((score1 + 1):ts)   )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Baixo   )) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Esquerda)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioMulti , (jogo@(Jogo (Jogador (x,y)) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                | not(jogoTerminou jogo) && controladorMulti = do return $ (InicioMulti  , ((Jogo (posJogador' jogo (Move Direita )) mapa):t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )
                                                                                                                                                                                                                                                                                                                   | (jogoTerminou jogo)    && controladorMulti = do return $ (PerdeuMulti 1, (jogo:t)                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score               )               
-- Perde Multi
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (PerdeuMulti _ , (h:jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts))       = do return $ (Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, controladorSingle, False           , (0:0:ts))
-- Sair
reageEventoGloss (EventKey (Char 'q'           ) Down _ _) (InicioSingle, (jogo:t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts))       = do killProcess
                                                                                                                                                                                                                                                                                                      return $ estadoGlossInicial seed extras roupas topscore texturasTerrenos texturasObstaculos texturasMenu skins -- (Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, False            , controladorMulti, (0:ts)  )
reageEventoGloss (EventKey (Char 'q'           ) Down _ _) (InicioMulti , (h:jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts))       = do killProcess
                                                                                                                                                                                                                                                                                                      return $ estadoGlossInicial seed extras roupas topscore texturasTerrenos texturasObstaculos texturasMenu skins --(Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, controladorSingle, False           , (0:0:ts))
reageEventoGloss (EventKey (Char 'Q'           ) Down _ _) (InicioSingle, (jogo:t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts))       = do killProcess
                                                                                                                                                                                                                                                                                                      return $ estadoGlossInicial seed extras roupas topscore texturasTerrenos texturasObstaculos texturasMenu skins -- (Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, False            , controladorMulti, (0:ts)  )
reageEventoGloss (EventKey (Char 'Q'           ) Down _ _) (InicioMulti , (h:jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts))       = do killProcess
                                                                                                                                                                                                                                                                                                      return $ estadoGlossInicial seed extras roupas topscore texturasTerrenos texturasObstaculos texturasMenu skins --(Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, controladorSingle, False           , (0:0:ts))
-- Reiniciar
reageEventoGloss (EventKey (Char 'r'           ) Down _ _) (InicioSingle, (jogo:t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts))       = do return $ (InicioSingle       , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, False            , True            , (0:0:[])) -- estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, False            , controladorMulti, (0:ts)  )
reageEventoGloss (EventKey (Char 'r'           ) Down _ _) (InicioMulti , (h:jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, (score1:score2:ts))       = do return $ (InicioMulti        , estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, 0, controladorSingle, False           , (0:0:ts))
-- Pausa
reageEventoGloss (EventKey (Char 'p'           ) Down _ _) (InicioSingle, (jogo:t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:score2:ts)) = do return $ (InicioSingle       , (jogo:t)     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, False            , controladorMulti, score   )
reageEventoGloss (EventKey (Char 'p'           ) Down _ _) (InicioMulti , (h:jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:score2:ts)) = do return $ (InicioMulti        , (h:jogo:t)   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, False           , score   )
-- Bot
reageEventoGloss (EventKey (Char 'b'           ) Down _ _) (InicioSingle, (jogo:t)  , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:score2:ts)) | not(controladorBot) = do return $ (InicioSingle       , (jogo:t)     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, True, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score   )
                                                                                                                                                                                                                                                                                                 | controladorBot = do return $ (InicioSingle       , (jogo:t)     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, False, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score   )

-- Reage Loja
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Cima    )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Baixo   )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Esquerda)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Direita )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Cima    )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Baixo   )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Esquerda)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Direita )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Cima    )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Baixo   )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Esquerda)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioPersonalizar Quieto, (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (x == 5) && (y == 5)  = do return $ (InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | (x == 18) && (y == 5) = do return $ (InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja:t)                                             , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                                                                           | otherwise             = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (posJogadorLoja loja (Move Direita )) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

-- Fim Loja
reageEventoGloss (EventKey (Char 'q'           ) Down _ _) s@(InicioPersonalizar Quieto, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do return $ (Opcoes (Jogar Nada), listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'q'           ) Down _ _) s@(InicioPersonalizar (NasRoupas (Nivel1 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (Jogador (3,4)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'q'           ) Down _ _) s@(InicioPersonalizar (NosMapas  (Nivel1 1)), (jogo1:jogo2:loja@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do return $ (InicioPersonalizar Quieto, (jogo1:jogo2:(Jogo (Jogador (9,4)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (FimPersonalizar , (jogo1:jogo2:lojaEx@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do return $ (Opcoes (Jogar Nada), (jogo1:jogo2:(Jogo (Jogador (11,12)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)

-- Reage Niveis
-- Nivel1
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Cima    )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Baixo   )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Esquerda)) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Direita )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Cima    )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Baixo   )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Esquerda)) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Direita )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Cima    )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Baixo   )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Esquerda)) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 3)) = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:(Jogo (posJogador' (listaJogos !! 3) (Move Direita )) (agarraMapa $ listaJogos !! 3)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                   | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel2
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Cima    )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Baixo   )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Esquerda)) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Direita )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Cima    )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Baixo   )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Esquerda)) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Direita )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Cima    )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Baixo   )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Esquerda)) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 4)) = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:(Jogo (posJogador' (listaJogos !! 4) (Move Direita )) (agarraMapa $ listaJogos !! 4)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                          | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                       , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel3
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Cima    )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Baixo   )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Esquerda)) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Direita )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Cima    )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Baixo   )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Esquerda)) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Direita )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Cima    )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Baixo   )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Esquerda)) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 5)) = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:(Jogo (posJogador' (listaJogos !! 5) (Move Direita )) (agarraMapa $ listaJogos !! 5)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                 | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                              , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel4
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Cima    )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Baixo   )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Esquerda)) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Direita )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Cima    )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Baixo   )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Esquerda)) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Direita )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Cima    )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Baixo   )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Esquerda)) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 6)) = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:(Jogo (posJogador' (listaJogos !! 6) (Move Direita )) (agarraMapa $ listaJogos !! 6)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                        | otherwise                           = do return $ (PerdeuCarreira                   , listaJogos                                                                                                                     , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel5
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Cima    )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Baixo   )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Esquerda)) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Direita )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Cima    )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Baixo   )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Esquerda)) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Direita )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Cima    )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Baixo   )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Esquerda)) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 7)) = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:(Jogo (posJogador' (listaJogos !! 7) (Move Direita )) (agarraMapa $ listaJogos !! 7)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                               | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                            , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel6
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Cima    )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Baixo   )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Esquerda)) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Direita )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Cima    )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Baixo   )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Esquerda)) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Direita )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Cima    )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Baixo   )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Esquerda)) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 8)) = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:(Jogo (posJogador' (listaJogos !! 8) (Move Direita )) (agarraMapa $ listaJogos !! 8)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                      | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel7
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Cima    )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Baixo   )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Esquerda)) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Direita )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Cima    )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Baixo   )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Esquerda)) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Direita )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Cima    )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Baixo   )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Esquerda)) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 9)) = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:(Jogo (posJogador' (listaJogos !! 9) (Move Direita )) (agarraMapa $ listaJogos !! 9)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                             | otherwise                           = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel8
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Cima    )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Baixo   )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Esquerda)) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Direita )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Cima    )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Baixo   )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Esquerda)) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Direita )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Cima    )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Baixo   )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Esquerda)) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 10)) = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:(Jogo (posJogador' (listaJogos !! 10) (Move Direita )) (agarraMapa $ listaJogos !! 10)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                    | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                   , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel9
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Cima    )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Baixo   )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Esquerda)) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Direita )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Cima    )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Baixo   )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Esquerda)) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Direita )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Cima    )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Baixo   )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Esquerda)) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 11)) = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:(Jogo (posJogador' (listaJogos !! 11) (Move Direita )) (agarraMapa $ listaJogos !! 11)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                           | otherwise                            = do return $ (PerdeuCarreira               ,     listaJogos                                                                                                                                                          , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Nivel10
reageEventoGloss (EventKey (SpecialKey KeyUp   ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Cima    )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyDown ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Baixo   )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyLeft ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Esquerda)) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (SpecialKey KeyRight) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Direita )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'w'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Cima    )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 's'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Baixo   )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'a'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Esquerda)) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'd'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Direita )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'W'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score@(score1:ts))  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Cima    )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, ((score1 + 1):ts))
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'S'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Baixo   )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'A'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Esquerda)) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageEventoGloss (EventKey (Char 'D'           ) Down _ _) (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)  | not(jogoTerminou (listaJogos !! 12)) = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:(Jogo (posJogador' (listaJogos !! 12) (Move Direita )) (agarraMapa $ listaJogos !! 12)):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, True             , controladorMulti, score)
                                                                                                                                                                                                                                                                                                                                                                                   | otherwise                            = do return $ (PerdeuCarreira                    , listaJogos                                                                                                                                                                 , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Perde Niveis
reageEventoGloss (EventKey (SpecialKey KeyEnter) Down _ _) (PerdeuCarreira , listaJogos@(jogo1:jogo2:loja:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = do killProcess
                                                                                                                                                                                                                                                                                                           return $ (Opcoes (Jogar Nada), estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Outros Casos
reageEventoGloss _ s = do return $ s

-- | Função que reage à passagem do tempo.
-- Reagir ao longo do tempo
reageTempoGloss :: Float -> EstadoGloss -> IO EstadoGloss
-- Reage Loja
reageTempoGloss _ (InicioPersonalizar Quieto   , (jogo1:jogo2:(Jogo (Jogador (11,12)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ (Opcoes (Jogar Nada)      , (jogo1:jogo2:(Jogo (Jogador (11,8)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
reageTempoGloss _ (InicioPersonalizar Quieto   , (jogo1:jogo2:(Jogo (Jogador (12,12)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ (Opcoes (Jogar Nada)      , (jogo1:jogo2:(Jogo (Jogador (11,8)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
-- Reage Single
reageTempoGloss a s@(Opcoes opcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (n+a) <= 1 = do playMenuPrincipal
                                                                                                                                                                                                                                                         return $ (Opcoes opcao, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
reageTempoGloss a (InicioSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou jogo) && controladorSingle && ((mod (round n) 2) == 0) && controladorBot = do return $ (InicioSingle, (jogoNovo1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                         | not(jogoTerminou jogo) && controladorSingle && controladorBot = do return $ (InicioSingle, (jogoNovo2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                         | not(jogoTerminou jogo) && controladorSingle && ((mod (round n) 2) == 0) && not(controladorBot) = do return $ (InicioSingle, (jogoNovo3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                         | not(jogoTerminou jogo) && controladorSingle && not(controladorBot) = do return $ (InicioSingle, (jogoNovo4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                         | (jogoTerminou jogo) = return $ (PerdeuSingle, (jogo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                         where jogoNovo1 = (animaJogo (deslizaJogo (seed+(head score)*(round n)) (bot1 jogo)) Parado)
                                                               --jogoNovo1 = Jogo (Jogador (x,y+1)) (estendeMapa (tiraUMAlinha $ agarraMapa(animaJogo (bot1 jogo) Parado)) (seed+(head score)*(round n)))
                                                               jogoNovo2 = (animaJogo (bot1 jogo) Parado)
                                                               jogoNovo3 = (animaJogo (deslizaJogo (seed+(head (tail score))*(round n)) (jogo)) Parado)
                                                               jogoNovo4 = (animaJogo (jogo) Parado)
reageTempoGloss a s@(PerdeuSingle, (jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ s
-- Reage Multi
-- Dar inicio
-- Deslize
reageTempoGloss a (InicioMulti, (jogo1@(Jogo jogador1 mapa1):jogo2@(Jogo jogador2 mapa2):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | (n+a) < 4                                          = do return $ (InicioMulti, (jogo1:jogo2:t)        , texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, False, score)
                                                                                                                                                                                                                                                               | not(jogoTerminou jogo1) && not(jogoTerminou jogo2) && ((mod (round n) 2) == 0) = do return $ (InicioMulti, (jogoNovo1:jogoNovo2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, True, score)
                                                                                                                                                                                                                                                               | not(jogoTerminou jogo1) && not(jogoTerminou jogo2)                             = do return $ (InicioMulti, (jogoNovo1':jogoNovo2':t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, True, score)
                                                                                                                                                                                                                                                               | (jogoTerminou jogo2) && controladorMulti = do killProcess
                                                                                                                                                                                                                                                                                                               return $ (PerdeuMulti 1, estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                               | (jogoTerminou jogo1) && controladorMulti = do killProcess
                                                                                                                                                                                                                                                                                                               return $ (PerdeuMulti 2, estadoInicial, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score)                                                                                                                                       
                                                         where jogoNovo1 = (animaJogo (deslizaJogo (seed+(head score)*(round n)) jogo1) Parado) 
                                                               jogoNovo1' = (animaJogo jogo1 Parado) 
                                                               jogoNovo2 = (animaJogo (deslizaJogo (seed+(head (tail score))*(round n)) (jogo2)) Parado) 
                                                               jogoNovo2' = (animaJogo jogo2 Parado)
reageTempoGloss a s@(PerdeuMulti _, (h:jogo@(Jogo (Jogador (x,y)) mapa):t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ s
-- Reage Niveis
reageTempoGloss a (InicioCarreira (Nivel1 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel1) && controladorSingle = do return $ (InicioCarreira (Nivel1 1) ComAcao, (jogo1:jogo2:loja:nivel1Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 20                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel1                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel1Novo = deslizaJogoDefinido (animaJogo nivel1 Parado) 
reageTempoGloss a (InicioCarreira (Nivel2 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel2) && controladorSingle = do return $ (InicioCarreira (Nivel2 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 20                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel2                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel2Novo = deslizaJogoDefinido (animaJogo nivel2 Parado) 
reageTempoGloss a (InicioCarreira (Nivel3 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel3) && controladorSingle = do return $ (InicioCarreira (Nivel3 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 20                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel3                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel3Novo = deslizaJogoDefinido (animaJogo nivel3 Parado) 
reageTempoGloss a (InicioCarreira (Nivel4 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel4) && controladorSingle = do return $ (InicioCarreira (Nivel4 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 20                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel4                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel4Novo = deslizaJogoDefinido (animaJogo nivel4 Parado) 
reageTempoGloss a (InicioCarreira (Nivel5 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel5) && controladorSingle = do return $ (InicioCarreira (Nivel5 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 20                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel5                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel5Novo = deslizaJogoDefinido (animaJogo nivel5 Parado) 
reageTempoGloss a (InicioCarreira (Nivel6 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel6) && controladorSingle = do return $ (InicioCarreira (Nivel6 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 20                                = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel6                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel6Novo = deslizaJogoDefinido (animaJogo nivel6 Parado) 
reageTempoGloss a (InicioCarreira (Nivel7 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel7) && controladorSingle = do return $ (InicioCarreira (Nivel7 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 18                                  = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel7                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel7Novo = deslizaJogoDefinido (animaJogo nivel7 Parado) 
reageTempoGloss a (InicioCarreira (Nivel8 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel8) && controladorSingle = do return $ (InicioCarreira (Nivel8 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 18                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel8                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel8Novo = deslizaJogoDefinido (animaJogo nivel8 Parado) 
reageTempoGloss a (InicioCarreira (Nivel9 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel9) && controladorSingle = do return $ (InicioCarreira (Nivel9 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 30                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel9                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel9Novo = deslizaJogoDefinido (animaJogo nivel9 Parado) 
reageTempoGloss a (InicioCarreira (Nivel10 1) ComAcao, listaJogos@(jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:nivel10:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) | not(jogoTerminou nivel10) && controladorSingle = do return $ (InicioCarreira (Nivel10 1) ComAcao, (jogo1:jogo2:loja:nivel1:nivel2:nivel3:nivel4:nivel5:nivel6:nivel7:nivel8:nivel9:nivel10Novo:t), texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n+a, controladorSingle, controladorMulti, score)
                                                                                                                                                                                                                                                                     -- | head score == 40                                   = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                                                                                                                                                                                                                                     | jogoTerminou nivel10                                     = return (PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, True, score)
                                                         where nivel10Novo = deslizaJogoDefinido (animaJogo nivel10 Parado)
-- Perdeu Nivel                                                                                                                                                                                                
reageTempoGloss a s@(PerdeuCarreira, listaJogos, texturasTerrenos, texturasObstaculos, extras, texturasMenu, seed, controladorBot, modelopersonagem, modeloMapa, skins, roupas, topscore, n, controladorSingle, controladorMulti, score) = return $ s

reageTempoGloss _ s = return s

-- | Função auxiliar ao desliza do mapa.
tiraUMAlinha :: Mapa -> Mapa
tiraUMAlinha (Mapa largura linhas) = (Mapa largura (init linhas))

-- | Função que permite leitura de informação de um ficheiro.
lerFicheiro ::  IO ([Roupas],TopScore)
lerFicheiro = do
   fileExist <- doesFileExist "save.txt"
   saved <- if fileExist then readFile "save.txt"
                else return "([Personagem],0)"
   return (read saved)

-- | Função principal.
main :: IO ()
main = do 
    btn_normal_jogar              <- loadBMP "../assets/img/Menu/Jogar/button_normal_jogar"
    btn_pressed_jogar             <- loadBMP "../assets/img/Menu/Jogar/button_pressed_jogar"
    btn_normal_sair               <- loadBMP "../assets/img/Menu/Sair/button_normal_sair"
    btn_pressed_sair              <- loadBMP "../assets/img/Menu/Sair/button_pressed_sair"
    btn_normal_ajuda              <- loadBMP "../assets/img/Menu/Ajuda/button_normal_ajuda"
    btn_pressed_ajuda             <- loadBMP "../assets/img/Menu/Ajuda/button_pressed_ajuda"
    btn_normal_classico           <- loadBMP "../assets/img/Menu/Jogar/Classico(Single)/button_normal_classico(single)"
    btn_pressed_classico          <- loadBMP "../assets/img/Menu/Jogar/Classico(Single)/button_pressed_classico(single)"
    btn_normal_multijogador       <- loadBMP "../assets/img/Menu/Jogar/Multijogador/button_normal_multijogador"
    btn_pressed_multijogador      <- loadBMP "../assets/img/Menu/Jogar/Multijogador/button_pressed_multijogador"
    btn_normal_voltar             <- loadBMP "../assets/img/Menu/Jogar/Voltar/button_normal_voltar"
    btn_pressed_voltar            <- loadBMP "../assets/img/Menu/Jogar/Voltar/button_pressed_voltar"
    btn_normal_personalizar       <- loadBMP "../assets/img/Menu/Personalizar/button_normal_edit"
    btn_pressed_personalizar      <- loadBMP "../assets/img/Menu/Personalizar/button_pressed_edit"
    btn_normal_carreira           <- loadBMP "../assets/img/Menu/Jogar/Carreira/button_normal_carreira.bmp"
    btn_pressed_carreira          <- loadBMP "../assets/img/Menu/Jogar/Carreira/button_pressed_carreira.bmp"
    btn_normal_nivel1             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel1/button_normal_nivel1"
    btn_normal_nivel2             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel2/button_normal_nivel2"
    btn_normal_nivel3             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel3/button_normal_nivel3"
    btn_normal_nivel4             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel4/button_normal_nivel4"
    btn_normal_nivel5             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel5/button_normal_nivel5"
    btn_normal_nivel6             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel6/button_normal_nivel6"
    btn_normal_nivel7             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel7/button_normal_nivel7"
    btn_normal_nivel8             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel8/button_normal_nivel8"
    btn_normal_nivel9             <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel9/button_normal_nivel9"
    btn_normal_nivel10            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel10/button_normal_nivel10"
    btn_pressed_nivel1            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel1/button_pressed_nivel1"
    btn_pressed_nivel2            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel2/button_pressed_nivel2"
    btn_pressed_nivel3            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel3/button_pressed_nivel3"
    btn_pressed_nivel4            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel4/button_pressed_nivel4"
    btn_pressed_nivel5            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel5/button_pressed_nivel5"
    btn_pressed_nivel6            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel6/button_pressed_nivel6"
    btn_pressed_nivel7            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel7/button_pressed_nivel7"
    btn_pressed_nivel8            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel8/button_pressed_nivel8"
    btn_pressed_nivel9            <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel9/button_pressed_nivel9"
    btn_pressed_nivel10           <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel10/button_pressed_nivel10"
    background                    <- loadBMP "../assets/img/Extras/background.bmp"
    logo                          <- loadBMP "../assets/img/Extras/mainlogo.bmp"
    nivel1front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel1/nivel1front.bmp"
    nivel2front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel2/nivel2front.bmp"
    nivel3front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel3/nivel3front.bmp"
    nivel4front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel4/nivel4front.bmp"
    nivel5front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel5/nivel5front.bmp"
    nivel6front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel6/nivel6front.bmp"
    nivel7front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel7/nivel7front.bmp"
    nivel8front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel8/nivel8front.bmp"
    nivel9front                   <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel9/nivel9front.bmp"
    nivel10front                  <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel10/nivel10front.bmp"
    arvore1                       <- loadBMP "../assets/img/Mapa1/arvore1.bmp"
    relva1                        <- loadBMP "../assets/img/Mapa1/relva1.bmp"
    tronco1                       <- loadBMP "../assets/img/Mapa1/tronco1.bmp"
    rio1                          <- loadBMP "../assets/img/Mapa1/rio1.bmp"
    carro1                        <- loadBMP "../assets/img/Mapa1/carro1.bmp"
    estrada1                      <- loadBMP "../assets/img/Mapa1/estrada1.bmp"
    personagem1                   <- loadBMP "../assets/img/Mapa1/personagem1.bmp"
    arvore2                       <- loadBMP "../assets/img/Mapa2/arvore2.bmp"
    relva2                        <- loadBMP "../assets/img/Mapa2/relva2.bmp"
    tronco2                       <- loadBMP "../assets/img/Mapa2/tronco2.bmp"
    rio2                          <- loadBMP "../assets/img/Mapa2/rio2.bmp"
    carro2                        <- loadBMP "../assets/img/Mapa2/carro2.bmp"
    estrada2                      <- loadBMP "../assets/img/Mapa2/estrada2.bmp"
    personagem2                   <- loadBMP "../assets/img/Mapa2/personagem2.bmp"
    arvore3                       <- loadBMP "../assets/img/Mapa3/arvore3.bmp"
    relva3                        <- loadBMP "../assets/img/Mapa3/relva3.bmp"
    tronco3                       <- loadBMP "../assets/img/Mapa3/tronco3.bmp"
    rio3                          <- loadBMP "../assets/img/Mapa3/rio3.bmp"
    carro3                        <- loadBMP "../assets/img/Mapa3/carro3.bmp"
    estrada3                      <- loadBMP "../assets/img/Mapa3/estrada3.bmp"
    personagem3                   <- loadBMP "../assets/img/Mapa3/personagem3.bmp"
    arvore4                       <- loadBMP "../assets/img/Mapa4/arvore4.bmp"
    relva4                        <- loadBMP "../assets/img/Mapa4/relva4.bmp"
    tronco4                       <- loadBMP "../assets/img/Mapa4/tronco4.bmp"
    rio4                          <- loadBMP "../assets/img/Mapa4/rio4.bmp"
    carro4                        <- loadBMP "../assets/img/Mapa4/carro4.bmp"
    estrada4                      <- loadBMP "../assets/img/Mapa4/estrada4.bmp"
    personagem4                   <- loadBMP "../assets/img/Mapa4/personagem4.bmp"
    arvore5                       <- loadBMP "../assets/img/Mapa5/arvore5.bmp"
    relva5                        <- loadBMP "../assets/img/Mapa5/relva5.bmp"
    tronco5                       <- loadBMP "../assets/img/Mapa5/tronco5.bmp"
    rio5                          <- loadBMP "../assets/img/Mapa5/rio5.bmp"
    carro5                        <- loadBMP "../assets/img/Mapa5/carro5.bmp"
    estrada5                      <- loadBMP "../assets/img/Mapa5/estrada5.bmp"
    personagem5                   <- loadBMP "../assets/img/Mapa5/personagem5.bmp"
    arvore6                       <- loadBMP "../assets/img/Mapa6/arvore6.bmp"
    relva6                        <- loadBMP "../assets/img/Mapa6/relva6.bmp"
    tronco6                       <- loadBMP "../assets/img/Mapa6/tronco6.bmp"
    rio6                          <- loadBMP "../assets/img/Mapa6/rio6.bmp"
    carro6                        <- loadBMP "../assets/img/Mapa6/carro6.bmp"
    estrada6                      <- loadBMP "../assets/img/Mapa6/estrada6.bmp"
    personagem6                   <- loadBMP "../assets/img/Mapa6/personagem6.bmp"
    arvore7                       <- loadBMP "../assets/img/Mapa7/arvore7.bmp"
    relva7                        <- loadBMP "../assets/img/Mapa7/relva7.bmp"
    tronco7                       <- loadBMP "../assets/img/Mapa7/tronco7.bmp"
    rio7                          <- loadBMP "../assets/img/Mapa7/rio7.bmp"
    carro7                        <- loadBMP "../assets/img/Mapa7/carro7.bmp"
    estrada7                      <- loadBMP "../assets/img/Mapa7/estrada7.bmp"
    personagem7                   <- loadBMP "../assets/img/Mapa7/personagem7.bmp"
    arvore8                       <- loadBMP "../assets/img/Mapa8/arvore8.bmp"
    relva8                        <- loadBMP "../assets/img/Mapa8/relva8.bmp"
    tronco8                       <- loadBMP "../assets/img/Mapa8/tronco8.bmp"
    rio8                          <- loadBMP "../assets/img/Mapa8/rio8.bmp"
    carro8                        <- loadBMP "../assets/img/Mapa8/carro8.bmp"
    estrada8                      <- loadBMP "../assets/img/Mapa8/estrada8.bmp"
    personagem8                   <- loadBMP "../assets/img/Mapa8/personagem8.bmp"
    arvore9                       <- loadBMP "../assets/img/Mapa9/arvore9.bmp"
    relva9                        <- loadBMP "../assets/img/Mapa9/relva9.bmp"
    tronco9                       <- loadBMP "../assets/img/Mapa9/tronco9.bmp"
    rio9                          <- loadBMP "../assets/img/Mapa9/rio9.bmp"
    carro9                        <- loadBMP "../assets/img/Mapa9/carro9.bmp"
    estrada9                      <- loadBMP "../assets/img/Mapa9/estrada9.bmp"
    personagem9                   <- loadBMP "../assets/img/Mapa9/personagem9.bmp"
    arvore10                      <- loadBMP "../assets/img/Mapa10/arvore10.bmp"
    relva10                       <- loadBMP "../assets/img/Mapa10/relva10.bmp"
    tronco10                      <- loadBMP "../assets/img/Mapa10/tronco10.bmp"
    rio10                         <- loadBMP "../assets/img/Mapa10/rio10.bmp"
    carro10                       <- loadBMP "../assets/img/Mapa10/carro10.bmp"
    estrada10                     <- loadBMP "../assets/img/Mapa10/estrada10.bmp"
    personagem10                  <- loadBMP "../assets/img/Mapa10/personagem10.bmp"
    moldurabase                   <- loadBMP "../assets/img/Extras/moldurabase.bmp"
    moldura                       <- loadBMP "../assets/img/Extras/moldura.bmp"
    scoreTi                       <- loadBMP "../assets/img/Extras/Score.bmp"
    timeTi                        <- loadBMP "../assets/img/Extras/Time.bmp"
    mapasTi                       <- loadBMP "../assets/img/Extras/Mapas.bmp"
    skinsTi                       <- loadBMP "../assets/img/Extras/Skins.bmp"
    som1                          <- loadBMP "../assets/img/Extras/sound.bmp"
    som2                          <- loadBMP "../assets/img/Extras/sound2.bmp"
    topscoreD                     <- loadBMP "../assets/img/Extras/TopScore.bmp"
    gameover                      <- loadBMP "../assets/img/Extras/gameover.bmp"
    nivel_concluido               <- loadBMP "../assets/img/Extras/nivel_concluido.bmp"
    ajuda                         <- loadBMP "../assets/img/Extras/ajuda.bmp"
    num0                          <- loadBMP "../assets/img/Extras/0.bmp"
    num1                          <- loadBMP "../assets/img/Extras/1.bmp"
    num2                          <- loadBMP "../assets/img/Extras/2.bmp"
    num3                          <- loadBMP "../assets/img/Extras/3.bmp"
    num4                          <- loadBMP "../assets/img/Extras/4.bmp"
    num5                          <- loadBMP "../assets/img/Extras/5.bmp"
    num6                          <- loadBMP "../assets/img/Extras/6.bmp"
    num7                          <- loadBMP "../assets/img/Extras/7.bmp"
    num8                          <- loadBMP "../assets/img/Extras/8.bmp"
    num9                          <- loadBMP "../assets/img/Extras/9.bmp"
    mapas1                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel1/nivel1index.bmp"
    mapas2                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel2/nivel2index.bmp"
    mapas3                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel3/nivel3index.bmp"
    mapas4                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel4/nivel4index.bmp"
    mapas5                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel5/nivel5index.bmp"
    mapas6                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel6/nivel6index.bmp"
    mapas7                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel7/nivel7index.bmp"
    mapas8                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel8/nivel8index.bmp"
    mapas9                        <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel9/nivel9index.bmp"
    mapas10                       <- loadBMP "../assets/img/Menu/Jogar/Carreira/Nivel10/nivel10index.bmp"
    loja                          <- loadBMP "../assets/img/Extras/loja.bmp"
    parede                        <- loadBMP "../assets/img/Extras/parede.bmp"
    portal                        <- loadBMP "../assets/img/Extras/portal.bmp"
    p1wins                        <- loadBMP "../assets/img/Extras/player1_wins.bmp"
    p2wins                        <- loadBMP "../assets/img/Extras/player2_wins.bmp"
    skin_atual                    <- loadBMP "../assets/img/Extras/skin_atual.bmp"
    mapa_atual                    <- loadBMP "../assets/img/Extras/mapa_atual.bmp"
    (roupas, topscore) <- lerFicheiro
    seed <- randomRIO(1,100)
    playIO dimensions       -- janela onde irá decorrer o jogo
      (greyN 0.5)         -- cor do fundo da janela
      frames              -- frame rate
      (estadoGlossInicial
      seed
      [
        ("mapa_atual",(scale 0.2 0.2 mapa_atual)),
        ("skin_atual",(scale 0.2 0.2 skin_atual)),
        ("scoreT",(scale 0.3 0.3 scoreTi)),
        ("timeT",(scale 0.3 0.3 timeTi)),
        ("mapasT",(scale 0.5 0.5 mapasTi)),
        ("skinsT",(scale 0.5 0.5 skinsTi)),
        ("som2",(scale 0.2 0.2 som2)),
        ("som1",(scale 0.2 0.2 som1)),
        ("topscore",(scale 0.2 0.2 topscoreD)),
        ("gameover",(scale 0.5 0.5 gameover)),
        ("nivel_concluido",(scale 0.5 0.5 nivel_concluido)),
        ("p1wins",(scale 0.5 0.5 p1wins)),
        ("p2wins",(scale 0.5 0.5 p2wins)),
        ("ajuda",(scale 0.55 0.55 ajuda)),
        ("0",(scale 0.09 0.09 num0)),
        ("1",(scale 0.09 0.09 num1)),
        ("2",(scale 0.09 0.09 num2)),
        ("3",(scale 0.09 0.09 num3)),
        ("4",(scale 0.09 0.09 num4)),
        ("5",(scale 0.09 0.09 num5)),
        ("6",(scale 0.09 0.09 num6)),
        ("7",(scale 0.09 0.09 num7)),
        ("8",(scale 0.09 0.09 num8)),
        ("9",(scale 0.09 0.09 num9))
      ]
      roupas
      topscore
      [
        ("Rio1",     ((scale 0.09 0.09 rio1)    , (0,0))),
        ("Relva1",   ((scale 0.09 0.09 relva1)  , (0,0))),
        ("Estrada1", ((scale 0.09 0.09 estrada1), (0,0))),
        ("Loja1",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio2",     ((scale 0.09 0.09 rio2)    , (0,0))),
        ("Relva2",   ((scale 0.09 0.09 relva2)  , (0,0))),
        ("Estrada2", ((scale 0.09 0.09 estrada2), (0,0))),
        ("Loja2",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio3",     ((scale 0.09 0.09 rio3)    , (0,0))),
        ("Relva3",   ((scale 0.1 0.1 relva3)  , (0,0))),
        ("Estrada3", ((scale 0.09 0.09 estrada3), (0,0))),
        ("Loja3",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio4",     ((scale 0.09 0.09 rio4)    , (0,0))),
        ("Relva4",   ((scale 0.1 0.1 relva4)  , (0,0))),
        ("Estrada4", ((scale 0.09 0.09 estrada4), (0,0))),
        ("Loja4",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio5",     ((scale 0.09 0.09 rio5)    , (0,0))),
        ("Relva5",   ((scale 0.09 0.09 relva5)  , (0,0))),
        ("Estrada5", ((scale 0.09 0.09 estrada5), (0,0))),
        ("Loja5",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio6",     ((scale 0.09 0.09 rio6)    , (0,0))),
        ("Relva6",   ((scale 0.09 0.09 relva6)  , (0,0))),
        ("Estrada6", ((scale 0.09 0.09 estrada6), (0,0))),
        ("Loja6",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio7",     ((scale 0.09 0.09 rio7)    , (0,0))),
        ("Relva7",   ((scale 0.09 0.09 relva7)  , (0,0))),
        ("Estrada7", ((scale 0.09 0.09 estrada7), (0,0))),
        ("Loja7",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio8",     ((scale 0.09 0.09 rio8)    , (0,0))),
        ("Relva8",   ((scale 0.09 0.09 relva8)  , (0,0))),
        ("Estrada8", ((scale 0.09 0.09 estrada8), (0,0))),
        ("Loja8",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio9",     ((scale 0.09 0.09 rio9)    , (0,0))),
        ("Relva9",   ((scale 0.09 0.09 relva9)  , (0,0))),
        ("Estrada9", ((scale 0.09 0.09 estrada9), (0,0))),
        ("Loja9",    ((scale 0.09 0.09 loja)    , (0,0))),
        ("Rio10",     ((scale 0.09 0.09 rio10)    , (0,0))),
        ("Relva10",   ((scale 0.09 0.09 relva10)  , (0,0))),
        ("Estrada10", ((scale 0.09 0.09 estrada10), (0,0))),
        ("Loja10",    ((scale 0.09 0.09 loja)    , (0,0)))
      ]
      [
       ("Arvore1",   ((scale 0.09 0.09 arvore1) , (0,0))),       
       ("Tronco1",   ((scale 0.09 0.09 tronco1) , (0,0))),    
       ("Carro1",    ((scale 0.09 0.09 carro1)  , (0,0))),
       ("Parede1",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal1",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum1",   (Blank, (0,0))),
       ("Arvore2",   ((scale 0.09 0.09 arvore2) , (0,0))),       
       ("Tronco2",   ((scale 0.09 0.09 tronco2) , (0,0))),    
       ("Carro2",    ((scale 0.09 0.09 carro2)  , (0,0))),
       ("Parede2",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal2",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum2",   (Blank, (0,0))),
       ("Arvore3",   ((scale 0.09 0.09 arvore3) , (0,0))),       
       ("Tronco3",   ((scale 0.09 0.09 tronco3) , (0,0))),    
       ("Carro3",    ((scale 0.09 0.09 carro3)  , (0,0))),
       ("Parede3",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal3",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum3",   (Blank, (0,0))),
       ("Arvore4",   ((scale 0.09 0.09 arvore4) , (0,0))),       
       ("Tronco4",   ((scale 0.09 0.09 tronco4) , (0,0))),    
       ("Carro4",    ((scale 0.09 0.09 carro4)  , (0,0))),
       ("Parede4",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal4",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum4",   (Blank, (0,0))),
       ("Arvore5",   ((scale 0.09 0.09 arvore5) , (0,0))),       
       ("Tronco5",   ((scale 0.09 0.09 tronco5) , (0,0))),    
       ("Carro5",    ((scale 0.13 0.13 carro5)  , (0,0))),
       ("Parede5",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal5",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum5",   (Blank, (0,0))),
       ("Arvore6",   ((scale 0.09 0.09 arvore6) , (0,0))),       
       ("Tronco6",   ((scale 0.09 0.09 tronco6) , (0,0))),    
       ("Carro6",    ((scale 0.09 0.09 carro6)  , (0,0))),
       ("Parede6",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal6",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum6",   (Blank, (0,0))),
       ("Arvore7",   ((scale 0.09 0.09 arvore7) , (0,0))),       
       ("Tronco7",   ((scale 0.09 0.09 tronco7) , (0,0))),    
       ("Carro7",    ((scale 0.09 0.09 carro7)  , (0,0))),
       ("Parede7",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal7",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum7",   (Blank, (0,0))),
       ("Arvore8",   ((scale 0.09 0.09 arvore8) , (0,0))),       
       ("Tronco8",   ((scale 0.09 0.09 tronco8) , (0,0))),    
       ("Carro8",    ((scale 0.09 0.09 carro8)  , (0,0))),
       ("Parede8",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal8",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum8",   (Blank, (0,0))),
       ("Arvore9",   ((scale 0.09 0.09 arvore9) , (0,0))),       
       ("Tronco9",   ((scale 0.09 0.09 tronco9) , (0,0))),    
       ("Carro9",    ((scale 0.09 0.09 carro9)  , (0,0))),
       ("Parede9",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal9",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum9",   (Blank, (0,0))),
       ("Arvore10",   ((scale 0.09 0.09 arvore10) , (0,0))),       
       ("Tronco10",   ((scale 0.09 0.09 tronco10) , (0,0))),    
       ("Carro10",    ((scale 0.09 0.09 carro10)  , (0,0))),
       ("Parede10",   ((scale 0.09 0.09 parede)  , (0,0))),
       ("Portal10",   ((scale 0.09 0.09 portal)  , (0,0))),
       ("Nenhum10",   (Blank, (0,0)))
      ]
      [
        ("btn_normal_jogar",  ((scale 0.2 0.2 btn_normal_jogar), (0,0))),
        ("btn_pressed_jogar", ((scale 0.2 0.2 btn_pressed_jogar), (0,0))),
        ("btn_normal_sair",   ((scale 0.2 0.2 btn_normal_sair), (0,0))),
        ("btn_pressed_sair",  ((scale 0.2 0.2 btn_pressed_sair), (0,0))),
        ("btn_normal_ajuda",  ((scale 0.2 0.2 btn_normal_ajuda), (0,0))),
        ("btn_pressed_ajuda", ((scale 0.2 0.2 btn_pressed_ajuda), (0,0))),
        ("btn_normal_classico",  ((scale 0.2 0.2 btn_normal_classico), (0,0))),
        ("btn_pressed_classico",  ((scale 0.2 0.2 btn_pressed_classico), (0,0))),
        ("btn_normal_multijogador",  ((scale 0.2 0.2 btn_normal_multijogador), (0,0))),
        ("btn_pressed_multijogador",  ((scale 0.2 0.2 btn_pressed_multijogador), (0,0))),
        ("btn_normal_voltar",  ((scale 0.2 0.2 btn_normal_voltar), (0,0))),
        ("btn_pressed_voltar",  ((scale 0.2 0.2 btn_pressed_voltar), (0,0))),
        ("btn_normal_carreira",  ((scale 0.2 0.2 btn_normal_carreira), (0,0))),
        ("btn_pressed_carreira",  ((scale 0.2 0.2 btn_pressed_carreira), (0,0))),
        ("btn_normal_personalizar",  ((scale 0.2 0.2 btn_normal_personalizar), (0,0))),
        ("btn_pressed_personalizar",  ((scale 0.2 0.2 btn_pressed_personalizar), (0,0))),
        ("logoEx",  ((scale 0.45 0.45 logo), (0,0))),
        ("background",  ((scale 1.3 1.3 background), (0,0))),
        ("btn_normal_nivel1",  ((scale 0.16 0.16 btn_normal_nivel1), (0,0))),
        ("btn_normal_nivel2",  ((scale 0.16 0.16 btn_normal_nivel2), (0,0))),
        ("btn_normal_nivel3",  ((scale 0.16 0.16 btn_normal_nivel3), (0,0))),
        ("btn_normal_nivel4",  ((scale 0.16 0.16 btn_normal_nivel4), (0,0))),
        ("btn_normal_nivel5",  ((scale 0.16 0.16 btn_normal_nivel5), (0,0))),
        ("btn_normal_nivel6",  ((scale 0.16 0.16 btn_normal_nivel6), (0,0))),
        ("btn_normal_nivel7",  ((scale 0.16 0.16 btn_normal_nivel7), (0,0))),
        ("btn_normal_nivel8",  ((scale 0.16 0.16 btn_normal_nivel8), (0,0))),
        ("btn_normal_nivel9",  ((scale 0.16 0.16 btn_normal_nivel9), (0,0))),
        ("btn_normal_nivel10",  ((scale 0.16 0.16 btn_normal_nivel10), (0,0))),
        ("btn_pressed_nivel1",  ((scale 0.16 0.16 btn_pressed_nivel1), (0,0))),
        ("btn_pressed_nivel2",  ((scale 0.16 0.16 btn_pressed_nivel2), (0,0))),
        ("btn_pressed_nivel3",  ((scale 0.16 0.16 btn_pressed_nivel3), (0,0))),
        ("btn_pressed_nivel4",  ((scale 0.16 0.16 btn_pressed_nivel4), (0,0))),
        ("btn_pressed_nivel5",  ((scale 0.16 0.16 btn_pressed_nivel5), (0,0))),
        ("btn_pressed_nivel6",  ((scale 0.16 0.16 btn_pressed_nivel6), (0,0))),
        ("btn_pressed_nivel7",  ((scale 0.16 0.16 btn_pressed_nivel7), (0,0))),
        ("btn_pressed_nivel8",  ((scale 0.16 0.16 btn_pressed_nivel8), (0,0))),
        ("btn_pressed_nivel9",  ((scale 0.16 0.16 btn_pressed_nivel9), (0,0))),
        ("btn_pressed_nivel10",  ((scale 0.16 0.16 btn_pressed_nivel10), (0,0))),
        ("nivel1front",  ((scale 1 1 nivel1front), (0,0))),
        ("nivel2front",  ((scale 1 1 nivel2front), (0,0))),
        ("nivel3front",  ((scale 1 1 nivel3front), (0,0))),
        ("nivel4front",  ((scale 1 1 nivel4front), (0,0))),
        ("nivel5front",  ((scale 1 1 nivel5front), (0,0))),
        ("nivel6front",  ((scale 1 1 nivel6front), (0,0))),
        ("nivel7front",  ((scale 1 1 nivel7front), (0,0))),
        ("nivel8front",  ((scale 1 1 nivel8front), (0,0))),
        ("nivel9front",  ((scale 1 1 nivel9front), (0,0))),
        ("nivel10front",  ((scale 1 1 nivel10front), (0,0)))
      ]
      [
        ("Personagem1", (scale 0.09 0.09 personagem1)),
        ("Personagem2", (scale 0.09 0.09 personagem2)),
        ("Personagem3", (scale 0.09 0.09 personagem3)),
        ("Personagem4", (scale 0.09 0.09 personagem4)),
        ("Personagem5", (scale 0.09 0.09 personagem5)),
        ("Personagem6", (scale 0.09 0.09 personagem6)),
        ("Personagem7", (scale 0.09 0.09 personagem7)),
        ("Personagem8", (scale 0.09 0.09 personagem8)),
        ("Personagem9", (scale 0.09 0.09 personagem9)),
        ("Personagem10", (scale 0.09 0.09 personagem10)),
        ("Mapas1", (scale 0.06 0.06 mapas1)),
        ("Mapas2", (scale 0.06 0.06 mapas2)),
        ("Mapas3", (scale 0.06 0.06 mapas3)),
        ("Mapas4", (scale 0.06 0.06 mapas4)),
        ("Mapas5", (scale 0.06 0.06 mapas5)),
        ("Mapas6", (scale 0.06 0.06 mapas6)),
        ("Mapas7", (scale 0.06 0.06 mapas7)),
        ("Mapas8", (scale 0.06 0.06 mapas8)),
        ("Mapas9", (scale 0.06 0.06 mapas9)),
        ("Mapas10", (scale 0.06 0.06 mapas10)),
        ("moldurabase", (scale 0.09 0.09 moldurabase)),
        ("moldura", (scale 1 1 moldura))
      ]
      )  -- define estado inicial do jogo
      desenhaEstadoGloss  -- desenha o estado do jogo
      reageEventoGloss    -- reage a um evento
      reageTempoGloss     -- reage ao passar do tempo
    -- play dimension white fr initialState drawState event time

---------------------------------------------------------------------------------

-- | Exemplos de jogo

u = 1

jogo1   = (Jogo (Jogador (6,15)) (Mapa 13 [(Rio (2*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum, Tronco]),(Estrada (4*u),[Carro, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Rio ((-1)*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Nenhum, Tronco]),(Estrada ((-1)*u),[Carro, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Rio (1*u),[Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum]),(Rio ((-2)*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum, Tronco]),(Rio (1*u),[Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Nenhum]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Estrada ((-1)*u),[Nenhum, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum]),(Estrada ((-1)*u),[Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Nenhum]),(Rio ((-1)*u),[Tronco, Tronco, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Tronco, Nenhum, Tronco]),(Relva,[Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore]),(Relva,[Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore]),(Relva,[Arvore, Arvore, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore, Arvore, Arvore])]))
jogo2   = (Jogo (Jogador (6,15)) (Mapa 13 [(Rio (2*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum, Tronco]),(Estrada (4*u),[Carro, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Rio ((-1)*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Nenhum, Tronco]),(Estrada ((-1)*u),[Carro, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Rio (1*u),[Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum]),(Rio ((-2)*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum, Tronco]),(Rio (1*u),[Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Nenhum]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Estrada ((-1)*u),[Nenhum, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum]),(Estrada ((-1)*u),[Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Nenhum]),(Rio ((-1)*u),[Tronco, Tronco, Tronco, Nenhum, Tronco, Tronco, Tronco, Tronco, Nenhum, Tronco, Tronco, Nenhum, Tronco]),(Relva,[Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore]),(Relva,[Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore]),(Relva,[Arvore, Arvore, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore, Arvore, Arvore])]))
--jogo2   = (Jogo (Jogador (6,15)) (Mapa 13 [(Rio (2*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Nenhum, Nenhum, Nenhum, Tronco, Nenhum, Tronco]),(Estrada (4*u),[Carro, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Rio ((-1)*u),[Tronco, Nenhum, Tronco, Nenhum, Tronco, Tronco, Tronco, Nenhum, Nenhum, Nenhum, Tronco, Nenhum, Tronco]),(Estrada ((-3)*u),[Carro, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Rio (2*u),[Tronco, Tronco, Tronco, Nenhum, Nenhum, Nenhum, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum]),(Rio ((-3)*u),[Tronco, Nenhum, Tronco, Nenhum, Nenhum, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum, Tronco]),(Rio (1*u),[Tronco, Tronco, Tronco, Nenhum, Nenhum, Nenhum, Tronco, Tronco, Tronco, Nenhum, Nenhum, Tronco, Nenhum]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Relva,[Arvore, Nenhum, Arvore, Nenhum, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Nenhum, Arvore]),(Estrada ((-3)*u),[Carro, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Estrada ((-3)*u),[Nenhum, Nenhum, Carro , Nenhum, Nenhum, Carro, Nenhum, Nenhum, Nenhum, Nenhum, Carro, Nenhum, Carro]),(Rio ((-1)*u),[Tronco, Nenhum, Tronco, Nenhum, Nenhum, Tronco, Nenhum, Nenhum, Nenhum, Tronco, Tronco, Nenhum, Tronco]),(Relva,[Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore]),(Relva,[Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore]),(Relva,[Arvore, Arvore, Arvore, Arvore, Arvore, Nenhum, Nenhum, Nenhum, Arvore, Arvore, Arvore, Arvore, Arvore])]))